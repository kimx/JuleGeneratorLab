@page "/projects"
@using JuleGeneratorLab.Models
@using JuleGeneratorLab.Services
@inject ProjectService ProjectSvc
@inject DatabaseConnectionService DbConnectionSvc
@inject NavigationManager NavigationMgr
@inject IJSRuntime JSRuntime

<PageTitle>Project Manager</PageTitle>

<h1><i class="bi bi-kanban-fill me-2"></i>Project Manager</h1>

<div class="mb-3">
    <button class="btn btn-primary" @onclick="ShowAddProjectModal">
        <i class="bi bi-plus-circle-fill me-1"></i> Add New Project
    </button>
</div>

@if (projects == null)
{
    <p><em>Loading projects...</em></p>
}
else if (!projects.Any())
{
    <div class="alert alert-info" role="alert">
        No projects found. Click "Add New Project" to get started.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Namespace</th>
                    <th>Description</th>
                    <th>DB Connection</th>
                    <th>Last Updated</th>
                    <th style="width: 150px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var project in projects)
                {
                    <tr>
                        <td>@project.Name</td>
                        <td>@project.Namespace</td>
                        <td>
                            @if (!string.IsNullOrWhiteSpace(project.Description) && project.Description.Length > 50)
                            {
                                <span title="@project.Description">@($"{project.Description.Substring(0, 50)}...")</span>
                            }
                            else
                            {
                                @project.Description
                            }
                        </td>
                        <td>@(GetConnectionName(project.DatabaseConnectionId))</td>
                        <td>@project.UpdatedAt.ToLocalTime().ToString("g")</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-1" @onclick="() => ShowEditProjectModal(project.Id)" title="Edit">
                                <i class="bi bi-pencil-square"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" @onclick="() => ShowDeleteConfirmModal(project.Id)" title="Delete">
                                <i class="bi bi-trash3-fill"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- Project Modal (Add/Edit) -->
@if (showProjectModal)
{
    <div class="modal fade show" tabindex="-1" style="display:block;" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <EditForm Model="currentProject" OnValidSubmit="HandleSaveProject">
                    <DataAnnotationsValidator />
                    <div class="modal-header">
                        <h5 class="modal-title">@(currentProject.Id == Guid.Empty ? "Add New Project" : "Edit Project")</h5>
                        <button type="button" class="btn-close" @onclick="CloseProjectModal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="projectName" class="form-label">Project Name <span class="text-danger">*</span></label>
                            <InputText id="projectName" class="form-control" @bind-Value="currentProject.Name" />
                            <ValidationMessage For="@(() => currentProject.Name)" />
                        </div>
                        <div class="mb-3">
                            <label for="projectNamespace" class="form-label">Namespace</label>
                            <InputText id="projectNamespace" class="form-control" @bind-Value="currentProject.Namespace" />
                            <ValidationMessage For="@(() => currentProject.Namespace)" />
                        </div>
                        <div class="mb-3">
                            <label for="projectDescription" class="form-label">Description</label>
                            <InputTextArea id="projectDescription" class="form-control" @bind-Value="currentProject.Description" rows="3" />
                            <ValidationMessage For="@(() => currentProject.Description)" />
                        </div>
                        <div class="mb-3">
                            <label for="projectDbConnection" class="form-label">Database Connection</label>
                            <InputSelect id="projectDbConnection" class="form-select" @bind-Value="currentProject.DatabaseConnectionId">
                                <option value="">-- Select Connection --</option>
                                @if (availableConnections != null)
                                {
                                    @foreach (var conn in availableConnections)
                                    {
                                        <option value="@conn.Id">@conn.Name</option>
                                    }
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => currentProject.DatabaseConnectionId)" />
                        </div>
                        <div class="mb-3">
                            <label for="projectSnippetSet" class="form-label">Code Snippet Set</label> @* Changed label back *@
                            <InputSelect id="projectSnippetSet" class="form-select" @bind-Value="currentProject.SelectedSnippetSetId">
                                <option value="">-- Select Snippet Set (Optional) --</option>
                                @if (availableSnippetSets != null)
                                {
                                    @foreach (var sSet in availableSnippetSets)
                                    {
                                        <option value="@sSet.Id">@sSet.Name</option>
                                    }
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => currentProject.SelectedSnippetSetId)" /> @* Re-enabled *@
                        </div>
                         @if (!string.IsNullOrWhiteSpace(errorMessage))
                        {
                            <div class="alert alert-danger mt-3" role="alert">
                                @errorMessage
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseProjectModal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle-fill me-1"></i> Save Project
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

<!-- Delete Confirmation Modal -->
@if (showDeleteConfirmModal)
{
    <div class="modal fade show" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" @onclick="CloseDeleteConfirmModal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete the project "<strong>@projectToDelete?.Name</strong>"?</p>
                    <p>This action cannot be undone.</p>
                     @if (!string.IsNullOrWhiteSpace(errorMessage))
                    {
                        <div class="alert alert-danger mt-3" role="alert">
                            @errorMessage
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseDeleteConfirmModal">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmDeleteProject">
                        <i class="bi bi-trash3-fill me-1"></i> Delete Project
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}
