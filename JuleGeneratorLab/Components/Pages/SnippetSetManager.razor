@page "/snippetsets"
@using JuleGeneratorLab.Models
@using JuleGeneratorLab.Services

<PageTitle>Snippet Set Manager</PageTitle>

<h1><i class="bi bi-collection-fill me-2"></i>Snippet Set Manager</h1>

<div class="mb-3">
    <button class="btn btn-primary" @onclick="ShowAddModal">
        <i class="bi bi-plus-circle-fill me-1"></i> Add New Snippet Set
    </button>
</div>

@if (snippetSets == null)
{
    <p><em>Loading snippet sets...</em></p>
}
else if (!snippetSets.Any())
{
    <div class="alert alert-info" role="alert">
        No snippet sets found. Click "Add New Snippet Set" to get started.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Snippets Count</th>
                    <th>Last Updated</th>
                    <th style="width: 150px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var sSet in snippetSets)
                {
                    <tr>
                        <td>@sSet.Name</td>
                        <td>
                            @if (!string.IsNullOrWhiteSpace(sSet.Description) && sSet.Description.Length > 50)
                            {
                                <span title="@sSet.Description">@($"{sSet.Description.Substring(0, 50)}...")</span>
                            }
                            else
                            {
                                @sSet.Description
                            }
                        </td>
                        <td>@sSet.SnippetNames.Count</td>
                        <td>@sSet.UpdatedAt.ToLocalTime().ToString("g")</td>
                        <td>
                            <button class="btn btn-sm btn-outline-primary me-1" @onclick="() => ShowEditModal(sSet.Id)" title="Edit">
                                <i class="bi bi-pencil-square"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" @onclick="() => ShowDeleteConfirmModal(sSet.Id)" title="Delete">
                                <i class="bi bi-trash3-fill"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- Add/Edit Snippet Set Modal -->
@if (showModal)
{
    <div class="modal fade show" tabindex="-1" style="display:block;" role="dialog">
        <div class="modal-dialog modal-xl"> @* Increased size for snippet list *@
            <div class="modal-content">
                <EditForm Model="currentSnippetSet" OnValidSubmit="HandleSave">
                    <DataAnnotationsValidator />
                    <div class="modal-header">
                        <h5 class="modal-title">@modalTitle</h5>
                        <button type="button" class="btn-close" @onclick="CloseModal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="setName" class="form-label">Set Name <span class="text-danger">*</span></label>
                            <InputText id="setName" class="form-control" @bind-Value="currentSnippetSet.Name" />
                            <ValidationMessage For="@(() => currentSnippetSet.Name)" />
                        </div>
                        <div class="mb-3">
                            <label for="setDescription" class="form-label">Description</label>
                            <InputTextArea id="setDescription" class="form-control" @bind-Value="currentSnippetSet.Description" rows="2" />
                            <ValidationMessage For="@(() => currentSnippetSet.Description)" />
                        </div>

                        <h6>Select Code Snippets:</h6>
                        @if (allAvailableSnippets == null || !allAvailableSnippets.Any())
                        {
                            <p class="text-muted">No code snippets available to select. Please add snippets via the Snippet Manager.</p>
                        }
                        else
                        {
                            <div class="list-group mb-3" style="max-height: 300px; overflow-y: auto; border: 1px solid #ced4da; border-radius: .25rem;">
                                @foreach (var snippet in allAvailableSnippets.OrderBy(s => s.Name))
                                {
                                    <label class="list-group-item list-group-item-action">
                                        <input type="checkbox"
                                               class="form-check-input me-2"
                                               checked="@selectedSnippetNamesInModal.Contains(snippet.Name)"
                                               @onchange="() => ToggleSnippetSelectionInModal(snippet.Name)" />
                                        @snippet.Name
                                        <small class="text-muted ms-2 d-block d-sm-inline">(@snippet.Description)</small>
                                    </label>
                                }
                            </div>
                        }

                        @if (!string.IsNullOrWhiteSpace(errorMessage))
                        {
                            <div class="alert alert-danger mt-3" role="alert">
                                @errorMessage
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-check-circle-fill me-1"></i> Save Snippet Set
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

<!-- Delete Confirmation Modal -->
@if (setPendingDelete != null)
{
    <div class="modal fade show" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" @onclick="() => setPendingDelete = null" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete the snippet set "<strong>@setPendingDelete.Name</strong>"?</p>
                    <p>This action cannot be undone.</p>
                     @if (!string.IsNullOrWhiteSpace(errorMessage) && setPendingDelete != null) // Show error only if delete modal is for an item
                    {
                        <div class="alert alert-danger mt-3" role="alert">
                            @errorMessage
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="() => setPendingDelete = null">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmDelete">
                        <i class="bi bi-trash3-fill me-1"></i> Delete Snippet Set
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}
